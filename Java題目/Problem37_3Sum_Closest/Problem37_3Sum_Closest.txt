class Solution {
    /*
    排序後，
    使用迴圈便歷，每一回圈以當前目標為之陣列值為主，去尋找兩個相加後等於0-該陣列值之數字(如此三數相加後為0)
    * */
    public int threeSumClosest(int[] nums, int target){
        int[] newNum = Arrays.stream(nums).sorted().toArray();
        int nearest = nums[0] + nums[1] + nums[2];
        for(int i=0; i<newNum.length-2; i++){
            int left = i + 1;
            int right = newNum.length-1;
            while(left < right){
                int sum = newNum[i] + newNum[left] + newNum[right];
                if(sum == target){return target;}

                else if(sum > target){right--;}

                else {left++;}
                if(Math.abs(sum-target) < Math.abs(nearest-target)){nearest = sum;}

            }


        }

        return nearest;
    }


    }