class Solution {
    public int jump(int[] nums) {
        int cur = 0;
        int count = 0;
        while(cur  nums.length-1){
            int max_step = cur + 1;
            if(cur + nums[cur] = nums.length-1){count++;break;}
            for(int i=cur+1; i = Math.min(cur + nums[cur],nums.length-1); i++){
                if(nums[i]+i-cur = nums[max_step] + max_step-cur){找到當前移動的距離加上移動到的下一個座標能移動距離和的最大值之座標
                    max_step = i;}}
            cur = max_step;
            count++;

        }
        return count;
    }


}